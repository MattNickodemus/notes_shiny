[["index.html", "My Shiny Notes Chapter 1 Disclaimer", " My Shiny Notes Matt Nickodemus 2021-01-23 Chapter 1 Disclaimer These are my notes on Shiny. The thoughts, code, drawings, and notes are copied from several other sources, so nothing here should be attributed to me. This is just my notebook where I collect things I like as I learn. "],["sources.html", "Chapter 2 Sources", " Chapter 2 Sources The Shiny webpage managed by RStudio. https://shiny.rstudio.com/ The Mastering Shiny book https://mastering-shiny.org/ "],["a-table-app.html", "Chapter 3 A table app 3.1 Just a table 3.2 Some structure", " Chapter 3 A table app Our first app will be a basic app with a table, a graph, and a single drop down selector. To build this we will use the {DT} library https://rstudio.github.io/DT/. 3.1 Just a table Lets start with building a data set to visualize. The data set we are going to build is the grade data for a course with 10 sections. library(tidyverse) library(charlatan) library(scales) grades &lt;- tibble(name = ch_name(1000), final_score = number(rbeta(1000, 5, 1),accuracy = .01), section = sample(1:10, 1000, replace = TRUE)) %&gt;% mutate( final_grade = case_when( final_score &lt; .60 ~ &#39;F&#39;, final_score &gt;= .60 &amp; final_score &lt; .70 ~ &#39;D&#39;, final_score &gt;= .70 &amp; final_score &lt; .80 ~ &#39;C&#39;, final_score &gt;= .80 &amp; final_score &lt; .90 ~ &#39;B&#39;, final_score &gt;= .90 ~ &#39;A&#39; ) ) %&gt;% mutate(section = str_pad(section, 2, &#39;left&#39;, &#39;0&#39;)) glimpse(grades) ## Rows: 1,000 ## Columns: 4 ## $ name &lt;chr&gt; &quot;Rhys Kessler-Schuppe&quot;, &quot;Jannie Bailey&quot;, &quot;Britt Schmitt S… ## $ final_score &lt;chr&gt; &quot;0.84&quot;, &quot;0.92&quot;, &quot;0.93&quot;, &quot;0.99&quot;, &quot;0.96&quot;, &quot;0.95&quot;, &quot;0.94&quot;, &quot;… ## $ section &lt;chr&gt; &quot;09&quot;, &quot;10&quot;, &quot;01&quot;, &quot;02&quot;, &quot;01&quot;, &quot;04&quot;, &quot;07&quot;, &quot;07&quot;, &quot;08&quot;, &quot;06… ## $ final_grade &lt;chr&gt; &quot;B&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;A&quot;, &quot;B&quot;, &quot;D&quot;, &quot;C&quot;, &quot;A&quot;, &quot;F… The basic framework for a Shiny app looks like this library(shiny) ui &lt;- fluidPage( ) server &lt;- function(input, output, session) { } shinyApp(ui, server) Let’s first just throw a basic data table into the app. library(shiny) library(DT) ui &lt;- fluidPage( DT::dataTableOutput(&#39;table&#39;) ) server &lt;- function(input, output, session) { output$table &lt;- DT::renderDataTable({ datatable(grades) }) } shinyApp(ui, server) This gives us an app looking like this. Which is great, but we can a lot better with just a few more lines of code. For the next few steps, I will just include the relevant portions of the app script. 3.2 Some structure First we will add a well panel with a nice title and a paragraph that explains what our application does. When I am first building an app, I often fill this space with the {lorem} package. ui &lt;- fluidPage( wellPanel( # New lines h3(&quot;My table app&quot;), # lorem::ipsum(paragraphs = 1, sentences = 6) # ), DT::dataTableOutput(&#39;table&#39;) ) Next we are going to center the table. We do this by creating a column call to contain the table. Our column element which contains the table will be 10 wide, and we will offset it by 1. ui &lt;- fluidPage( wellPanel( h3(&quot;My table app&quot;), lorem::ipsum(paragraphs = 1, sentences = 6) ), fluidRow( column(10, offset = 1, # &lt;================================================== DT::dataTableOutput(&#39;table&#39;) ) ) ) We can also use custom CSS in the column element. ui &lt;- fluidPage( br(), wellPanel( h3(&quot;My table app&quot;), lorem::ipsum(paragraphs = 1, sentences = 6) ), fluidRow( column(10, offset = 1, style = &#39;background-color:red&#39;, # &lt;================== DT::dataTableOutput(&#39;table&#39;) ) ) ) "],["add-a-graph.html", "Chapter 4 Add a graph!", " Chapter 4 Add a graph! Next we are going to add a graph to our app. We will make a basic bar graph showing the distribution of grades in the course. Here is the {ggplot2} code we will use to make the graph. ggplot(grades, aes(final_grade, fill = final_grade)) + geom_histogram(stat = &#39;count&#39;) The code for the app will look like this ui &lt;- fluidPage( br(), wellPanel( h3(&quot;My table app&quot;), lorem::ipsum(paragraphs = 1, sentences = 6) ), fluidRow( column(10, offset = 1, DT::dataTableOutput(&#39;table&#39;), plotOutput(&#39;plot&#39;) # &lt;====== Add the plot to the UI, in the column element ) ) ) server &lt;- function(input, output, session) { output$table &lt;- DT::renderDataTable({ datatable(grades) }) output$plot &lt;- renderPlot({ # &lt;========== Add new element to the output list ggplot(grades, aes(final_grade, fill = final_grade)) + geom_histogram(stat = &#39;count&#39;) }) } "]]
